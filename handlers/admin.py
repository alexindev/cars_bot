import os

from aiogram import types, Dispatcher, F
from aiogram.fsm.context import FSMContext

from loader import bot, base
from keyboard.inline import admin_manager_kb, admin_cancel_kb
from utils.helpers import show_priority_drivers_text
from states.admin import AdminComands


async def admin_manager(message: types.Message):
    """ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∫–æ–π """
    admins = os.getenv('ADMIN').split(',')
    if str(message.from_user.id) in admins:
        await bot.send_message(message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=admin_manager_kb())


async def show_staff(callback: types.CallbackQuery):
    """ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π """
    await callback.answer()
    data = base.get_staff_driver()
    if data:
        text = show_priority_drivers_text(data)
        await callback.message.edit_text(text=text, reply_markup=admin_cancel_kb())
    else:
        await callback.message.edit_text('üôÖ –ù–∏ –æ–¥–Ω–æ–≥–æ –≤–æ–¥–∏—Ç–µ–ª—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ', reply_markup=admin_cancel_kb())


async def get_phone_staff(callback: types.CallbackQuery, state: FSMContext):
    """ –í–≤–µ—Å—Ç–∏ –Ω–æ–º–µ—Ä –≤–æ–¥–∏—Ç–µ–ª—è """
    await callback.answer()
    callback_data = callback.data.split('__')[0]
    if callback_data == 'add':
        await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º "add"\n–ü—Ä–∏–º–µ—Ä: add +79377788899',
                                         reply_markup=admin_cancel_kb())
        await state.set_state(AdminComands.get_phone)
    else:
        await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º "del"\n–ü—Ä–∏–º–µ—Ä: del +79377788899',
                                         reply_markup=admin_cancel_kb())
        await state.set_state(AdminComands.get_phone)


async def new_staff(message: types.Message, state: FSMContext):
    """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—è–º """

    text = message.text.split(' ')
    if len(text) < 2:
        await bot.send_message(
            message.from_user.id,
            '–ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
            reply_markup=admin_cancel_kb()
        )
        return
    action, phone = text[0], text[-1]
    user = base.get_user(phone=phone)
    if user:
        if action == 'add':
            if user.get('is_staff'):
                await bot.send_message(message.from_user.id,
                                       f'–£ –≤–æ–¥–∏—Ç–µ–ª—è {user.get("full_name")} —Å –Ω–æ–º–µ—Ä–æ–º {phone} —É–∂–µ –µ—Å—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç',
                                       reply_markup=admin_cancel_kb())
            else:
                update = base.update_driver_status(phone=phone, status=True)
                if update:
                    await bot.send_message(
                        message.from_user.id,
                        f'–í–æ–¥–∏—Ç–µ–ª—é {user.get("full_name")} —Å –Ω–æ–º–µ—Ä–æ–º {user.get("phone")} –Ω–∞–∑–Ω–∞—á–µ–Ω –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç',
                        reply_markup=admin_cancel_kb()
                    )
                else:
                    await bot.send_message(message.from_user.id,
                                           f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—é {user.get("full_name")}',
                                           reply_markup=admin_cancel_kb())
        else:
            update = base.update_driver_status(phone=phone, status=False)
            if update:
                await bot.send_message(
                    message.from_user.id,
                    f'–£ –≤–æ–¥–∏—Ç–µ–ª—è {user.get("full_name")} —Å –Ω–æ–º–µ—Ä–æ–º {user.get("phone")} –±–æ–ª—å—à–µ –Ω–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞',
                    reply_markup=admin_cancel_kb()
                )
            else:
                await bot.send_message(message.from_user.id,
                                       f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤–æ–¥–∏—Ç–µ–ª—é {user.get("full_name")}',
                                       reply_markup=admin_cancel_kb())
    else:
        await bot.send_message(message.from_user.id,
                               f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–º–µ—Ä–æ–º {phone} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ',
                               reply_markup=admin_cancel_kb()
                               )
    await state.clear()


async def admin_stat(callback: types.CallbackQuery):
    """ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–æ–¥–∏—Ç–µ–ª—è–º """
    await callback.answer()
    driver_count = base.get_drivers_count()
    await callback.message.edit_text(f'–í –±–æ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ: {driver_count}', reply_markup=admin_cancel_kb())


async def admin_cancel(callback: types.CallbackQuery, state: FSMContext):
    """ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∫–∏ """
    await callback.answer()
    await state.clear()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=admin_manager_kb())


def admin_handlers(dp: Dispatcher):
    dp.message.register(admin_manager, F.text == '/admin')
    dp.callback_query.register(show_staff, F.data == 'show_staff')
    dp.callback_query.register(get_phone_staff, F.data.endswith('__staff'))
    dp.callback_query.register(admin_stat, F.data == 'admin_stat')
    dp.callback_query.register(admin_cancel, F.data == 'cancel_admin')
    dp.message.register(new_staff, AdminComands.get_phone)
