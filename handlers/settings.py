from aiogram import types, Dispatcher, F
from loader import data, base
from keyboard.inline import settings_kb, delivery_settings_kb, cancel_kb, incity_settings_kb, payment_settings_kb
from utils.helpers import get_state_text


async def settings_user(callback: types.CallbackQuery):
    """ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç: üëá', reply_markup=settings_kb())


async def current_state(callback: types.CallbackQuery):
    """ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è """
    await callback.answer()
    user = base.get_user(chat_id=callback.from_user.id)
    if user:
        car_id = user.get('car_id')
        if car_id:
            state = await data.get_current_state(car_id=car_id, park_id=user.get('park_id'),
                                                 session_id=user.get('session_id'))
            if state:
                text = get_state_text(state)
                await callback.message.edit_text(text=text, reply_markup=cancel_kb())
            else:
                await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
        else:
            await callback.message.edit_text('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞', reply_markup=cancel_kb())
    else:
        await callback.message.edit_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å /start', reply_markup=cancel_kb())


async def payment_settings(callback: types.CallbackQuery):
    """ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ –æ–ø–ª–∞—Ç—ã """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëá', reply_markup=payment_settings_kb())


async def payment_manager(callback: types.CallbackQuery):
    """ –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –æ–ø–ª–∞—Ç—ã """
    await callback.answer()
    callback_data = callback.data.split('_')[-1]
    user = base.get_user(chat_id=callback.from_user.id)
    if user:
        driver_id = user.get('driver_id')
        limit = '300'
        answer = '–Ω–∞–ª–∏—á–Ω—ã–µ'
        if callback_data == 'off':
            limit = '150000'
            answer = '–±–µ–∑–Ω–∞–ª–∏—á–Ω—ã–µ'
        if await data.set_payment(driver_id, limit, park_id=user.get('park_id'), client=user.get('client'),
                                  api_key=user.get('api_key')):
            await callback.message.edit_text(f'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–∂–∏–º –æ–ø–ª–∞—Ç—ã - {answer}', reply_markup=cancel_kb())
        else:
            await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –æ–ø–ª–∞—Ç—ã', reply_markup=cancel_kb())
    else:
        await callback.message.edit_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å /start', reply_markup=cancel_kb())


async def delivery_settings(callback: types.CallbackQuery):
    """ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëá', reply_markup=delivery_settings_kb())


async def delivery_manager(callback: types.CallbackQuery):
    """ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ """
    await callback.answer()
    callback_data = callback.data.split('_')[-1]
    category = ['express', 'courier']
    user = base.get_user(chat_id=callback.from_user.id)
    if user:
        car_id = user.get('car_id')
        if car_id:
            state: dict = await data.get_current_state(car_id=car_id, park_id=user.get('park_id'),
                                                       session_id=user.get('session_id'))
            if state:
                categories = state.get('categories')
                if callback_data == 'on':
                    if 'express' in categories:
                        await callback.message.edit_text('ü§ù –î–æ—Å—Ç–∞–≤–∫–∞ —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞', reply_markup=cancel_kb())
                    else:
                        state['categories'].extend(category)
                        state['amenities'].append('delivery')
                        status = await data.update_category(car_id, state, park_id=user.get('park_id'),
                                                            session_id=user.get('session_id'))
                        if status:
                            await callback.message.edit_text('‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞', reply_markup=cancel_kb())
                        else:
                            await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
                else:
                    if 'express' in categories:
                        for elem in category:
                            if elem in state['categories']:
                                state['categories'].remove(elem)
                        state['amenities'].remove('delivery')
                        status = await data.update_category(car_id, state, park_id=user.get('park_id'),
                                                            session_id=user.get('session_id'))
                        if status:
                            await callback.message.edit_text('‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞', reply_markup=cancel_kb())
                        else:
                            await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
                    else:
                        await callback.message.edit_text('üíî –î–æ—Å—Ç–∞–≤–∫–∞ —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω–∞', reply_markup=cancel_kb())
            else:
                await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
        else:
            await callback.message.edit_text('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞', reply_markup=cancel_kb())
    else:
        await callback.message.edit_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å /start', reply_markup=cancel_kb())


async def incity_settings(callback: types.CallbackQuery):
    """ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∂–∏–º–∞ –ú–µ–∂–≥–æ—Ä–æ–¥ """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëá', reply_markup=incity_settings_kb())


async def incity_manager(callback: types.CallbackQuery):
    """ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–º –ú–µ–∂–≥–æ—Ä–æ–¥ """
    await callback.answer()
    callback_data = callback.data.split('_')[-1]

    category = ['intercity']
    user = base.get_user(chat_id=callback.from_user.id)
    if user:
        car_id = user.get('car_id')
        if car_id:
            state: dict = await data.get_current_state(car_id=car_id, park_id=user.get('park_id'),
                                                       session_id=user.get('session_id'))
            if state:
                categories = state.get('categories')
                if callback_data == 'on':
                    if 'intercity' in categories:
                        await callback.message.edit_text('ü§ù –ü–æ–µ–∑–¥–∫–∏ –ø–æ –º–µ–∂–≥–æ—Ä–æ–¥—É —É–∂–µ –≤–∫–ª—é—á–µ–Ω',
                                                         reply_markup=cancel_kb())
                    else:
                        state['categories'].extend(category)
                        status = await data.update_category(car_id, state, park_id=user.get('park_id'),
                                                            session_id=user.get('session_id'))
                        if status:
                            await callback.message.edit_text('‚úÖ –ü–æ–µ–∑–¥–∫–∏ –ø–æ –º–µ–∂–≥–æ—Ä–æ–¥—É –≤–∫–ª—é—á–µ–Ω—ã',
                                                             reply_markup=cancel_kb())
                        else:
                            await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
                else:
                    if 'intercity' in categories:
                        state['categories'].remove('intercity')
                        status = await data.update_category(car_id, state, park_id=user.get('park_id'),
                                                            session_id=user.get('session_id'))
                        if status:
                            await callback.message.edit_text('‚úÖ –ü–æ–µ–∑–¥–∫–∏ –ø–æ –º–µ–∂–≥–æ—Ä–æ–¥—É –≤—ã–∫–ª—é—á–µ–Ω—ã',
                                                             reply_markup=cancel_kb())
                        else:
                            await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
                    else:
                        await callback.message.edit_text('üíî –ü–æ–µ–∑–¥–∫–∏ –ø–æ –º–µ–∂–≥–æ—Ä–æ–¥—É —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω—ã',
                                                         reply_markup=cancel_kb())
            else:
                await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', reply_markup=cancel_kb())
        else:
            await callback.message.edit_text('–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞', reply_markup=cancel_kb())
    else:
        await callback.message.edit_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å /start', reply_markup=cancel_kb())


def settings_handlers(dp: Dispatcher):
    dp.callback_query.register(settings_user, F.data == 'settings')
    dp.callback_query.register(current_state, F.data == 'current_state')
    dp.callback_query.register(delivery_settings, F.data == 'delivery')
    dp.callback_query.register(delivery_manager, F.data.startswith('delivery_'))
    dp.callback_query.register(payment_settings, F.data == 'payment')
    dp.callback_query.register(payment_manager, F.data.startswith('cash_'))
    dp.callback_query.register(incity_settings, F.data == 'incity')
    dp.callback_query.register(incity_manager, F.data.startswith('incity_'))
