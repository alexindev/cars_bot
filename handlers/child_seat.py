from aiogram import types

from keyboard.inline import seat_settings_kb, cancel_kb, seats_kb
from loader import data, base
from utils.browser import driver
from utils.helpers import get_seat_text


async def seat_settings(callback: types.CallbackQuery):
    """ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç—Å–∫–æ–≥–æ –∫—Ä–µ—Å–ª–∞ """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: üëá', reply_markup=seat_settings_kb())


async def seat_info(callback: types.CallbackQuery):
    """ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç—Å–∫–æ–º –∫—Ä–µ—Å–ª–µ """
    await callback.answer()
    user = base.get_user(chat_id=callback.from_user.id)
    if user:
        car_id = user.get('car_id')
        state: dict = data.get_current_state(car_id=car_id)
        if state:
            if 'chairs' in state:
                seats = []
                for i in state.get('chairs'):
                    seats.extend(i.get('categories'))
                text = get_seat_text(seats)
                await callback.message.edit_text(text=text, reply_markup=cancel_kb())
            else:
                await callback.message.edit_text('üóø –ù–∏ –æ–¥–Ω–æ–≥–æ –¥–µ—Ç—Å–∫–æ–≥–æ –∫—Ä–µ—Å–ª–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ',
                                                 reply_markup=cancel_kb())
    else:
        await callback.message.edit_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å /start', reply_markup=cancel_kb())


async def seat_add(callback: types.CallbackQuery):
    """ –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫—Ä–µ—Å–ª–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: üëá', reply_markup=seats_kb('add'))


async def seat_delete(callback: types.CallbackQuery):
    """ –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∫—Ä–µ—Å–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è """
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: üëá', reply_markup=seats_kb('delete'))


async def seat_update(callback: types.CallbackQuery):
    """ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Ç—Å–∫–∏–º–∏ –∫—Ä–µ—Å–ª–∞–º–∏ """
    await callback.answer()
    user = base.get_user(chat_id=callback.from_user.id)
    if user:
        callback_data = callback.data.split('__')[-1]

        action = 'create'
        if callback_data.startswith('add'):
            category = callback_data.split('_')[-1]
        else:
            action = 'delete'
            category = callback_data.split('_')[-1]
        await callback.message.edit_text('‚è≥ –û–∂–∏–¥–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏...')
        seat = await driver(driver_id=user.get('driver_id'), action=action, category=category)
        if seat:
            await callback.message.edit_text('‚úÖ –£—Å–ø–µ—à–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è', reply_markup=cancel_kb())
        else:
            await callback.message.edit_text('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏', reply_markup=cancel_kb())
    else:
        await callback.message.edit_text('‚ùå –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å /start', reply_markup=cancel_kb())

