from loader import bot
from aiogram import types, Dispatcher, F
from aiogram.fsm.context import FSMContext

from keyboard.standart import register_kb, send_phone_kb
from utils.text_answer import start_command_text, auth_user_text, park_info_text


async def start_command(message: types.Message, state: FSMContext):
    """ –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ """
    await state.clear()
    await bot.send_message(message.from_user.id, text=start_command_text, reply_markup=register_kb)


async def auth_user(message: types.Message):
    """ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π """
    await bot.send_message(message.from_user.id, text=auth_user_text, reply_markup=send_phone_kb)


async def park_info(message: types.Message):
    """ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–∫–µ """
    await bot.send_message(message.from_user.id, text=park_info_text)


def commands_handlers(dp: Dispatcher):
    """ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ """
    dp.message.register(start_command, (F.text == '‚Ü©') | (F.text == '/start'))
    dp.message.register(auth_user, F.text == 'üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
    dp.message.register(park_info, F.text == '‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞—Ä–∫–µ')
